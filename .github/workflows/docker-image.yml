name: Docker Image CI

on:
  push:
    branches: [deploy]
jobs:
   BuildAndPush:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Node.js 16
      uses: actions/setup-node@v1
      with:
        node-version: '16'
    - name : run command code to add .env file and push to server
      run: |
           cd ./FuQuiz-FE
           cd ./config
           echo "SERVER_URL=${{ secrets.SERVER_URL }}" > .env.production
           cd ../
           cd ../
           cd ./FuQuiz-BE
           cd ./config
           echo "DB_USERNAME=${{ secrets.DB_USERNAME }}
                DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                DB_NAME=${{ secrets.DB_NAME }}
                DB_HOST=${{ secrets.DB_HOST }}
                DB_PORT=${{ secrets.DB_PORT }}

                JWT_SECRET=${{ secrets.JWT_SECRET }}

                SERVER_URL=${{ secrets.SERVER_URL }}
                CLIENT_URL=${{ secrets.CLIENT_URL }}

                SENDGRID_KEY=${{ secrets.SENDGRID_KEY }}
                SENDGRID_SENDER=${{ secrets.SENDGRID_SENDER }}
                SENDGRID_URL=${{ secrets.SENDGRID_URL }}

                AWS_REGION=${{ secrets.AWS_REGION }}
                AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
                AWS_BUCKET=${{ secrets.AWS_BUCKET }}" > .env.production
    - name: Build on docker-compose file
      run: |
           docker-compose -f docker-compose.github.yml build
    - name: login to docker hub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: push frontend to dockerhub
      run: |
           docker push dauleduc2/fuquizclient:latest
    - name: push server to dockerhub
      run: |
           docker push dauleduc2/fuquizserver:latest
   deploy:
    runs-on: ubuntu-latest
    needs: [BuildAndPush]
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
                  cd /app
                  docker-compose pull
                  docker-compose up -d
                  echo done